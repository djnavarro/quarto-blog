---
title: "Fine-grained control of RNG seeds in R"
description: "Like, why is 'seedcatcher' not already an R package?"
date: "2023-12-27"
--- 

<!--------------- my typical setup ----------------->

```{r}
#| label: setup
#| include: false
very_wide <- 500
wide <- 136
narrow <- 76
options(width = narrow)
cache_images <- TRUE
set.seed(1)
```

<!--------------- post begins here ----------------->

Literally 19 lines of code:

```{r}
Seed <- R6::R6Class("Seed",
  public = list(
    initialize = function(...) {
      old <- .Random.seed
      set.seed(...)
      self$state <- eval(.Random.seed, envir = .GlobalEnv)
      assign(".Random.seed", old, envir = .GlobalEnv)
    },
    state = NULL,
    use = function(expr, envir = parent.frame()) {
      old <- .Random.seed
      assign(".Random.seed", self$state, envir = .GlobalEnv)
      x <- eval(substitute(expr), envir = envir)
      self$state <- eval(.Random.seed, envir = .GlobalEnv)
      assign(".Random.seed", old, envir = .GlobalEnv)
      return(x)
    }
  )
)
```

Lo and fucking behold bitch...

```{r}
set.seed(1)
old <- .Random.seed
x <- Seed$new(1)
y <- Seed$new(1)
x$use(sample(10))
y$use(sample(10))
x$use(sample(10))
y$use(sample(10))
all.equal(old, .Random.seed)
```

