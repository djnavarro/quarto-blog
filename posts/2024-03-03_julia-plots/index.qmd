---
title: "Plotting data in Julia"
description: "Part three of this three-part series of Julia posts, in which I try to figure out how to draw some nice plots"
date: "2024-03-03"
categories: ["Julia", "Data Visualisation"]
jupyter: julia-1.10
--- 

<!--------------- post begins here ----------------->


Using the [Plots](https://docs.juliaplots.org/latest/) package

```{julia}
using CSV
using DataFrames
using Plots
using StatsPlots
```

Originally when I was playing around in Julia I used the [PalmerPenguins](https://juliapackages.com/p/palmerpenguins) package to import the penguins data, but I have been having some difficulty getting it to work properly in the quarto context (though in hindsight I think the problem was my Julia environment), so I've resorted to using a CSV file instead.


```{julia}
penguins = DataFrame(CSV.File("penguins.csv"; missingstring = "NA")) 
```

I'll start with scatter plot. I could use `scatter()` here to avoid needing to set the seriestype
explicitly, but for learning purposes I find it a little easier to work with `plot()` for everything and control plot type via explicit attribute values:

```{julia}
plot(
  penguins.bill_length_mm, 
  penguins.bill_depth_mm, 
  seriestype=:scatter
)
```

It's little awkward to refer to the `penguins` data frame repeatedly in this code, and so it's more convenient to use the `@df` macro:

```{julia}
@df penguins plot(
  :bill_length_mm,
  :bill_depth_mm,
  seriestype=:scatter,
  group=:species
)
```

Adding labels is achieved by modifying the relevant attributes:

```{julia}
@df penguins plot(
  :bill_length_mm,
  :bill_depth_mm,
  seriestype=:scatter,
  group=:species,
  title="Palmer Penguins",
  xlabel="Bill Length (mm)",
  ylabel="Bill Depth (mm)"
)
```

Filter rows that have missing bill lengths, because violin series can't handle missing values. first let's find the the rows we want to keep: 

```{julia}
keep = .!ismissing.(penguins.bill_length_mm)
```

So now this data frame is violin safe...

```{julia}
bill_lengths = penguins[keep, [:bill_length_mm, :species]]
```

So now we can create a violin plot

```{julia}
@df bill_lengths plot(
    string.(:species),
    :bill_length_mm,
    seriestype=:violin,
    legend=false,
    xlabel="Species",
    ylabel="Bill Length (mm)"
)
```



