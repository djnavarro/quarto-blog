---
title: "Zero-copy data handover between R and Python, using Arrow and reticulate"
description: ""
date: "2022-05-28"
categories: [Apache Arrow, R, Python]
image: "img/cover.jpg"
engine: knitr
---

<!-- 
cover img: https://unsplash.com/photos/k39RGHmLoV8
artist: Claudio Schwarz
licence: unsplash free-to-use 
-->

<!--------------- my typical setup ----------------->

```{r setup, include=FALSE}
long_slug <- "2022-05-28_zero-copy-data-handover-in-arrow"
#renv::use(lockfile = "renv.lock")
```

<!-- 
the default python environment is this one:
/home/danielle/.local/share/r-miniconda/envs/r-reticulate/bin/python
--->

<!--
conda_install("arrow_env", "pyarrow")
-->

```{r}
reticulate::use_miniconda(
  condaenv = "/home/danielle/miniconda3/bin/python", 
  required = TRUE
)
```

```{r, eval=FALSE}
reticulate::conda_install(packages = "pyarrow")
```

<!--------------- post begins here ----------------->

BLAH 


<!-- <blockquote class="twitter-tweet"><p lang="en" dir="ltr">And with an arrow table (or dataset) that handoff can be zero copy, zero serialization. We need to improve our docs around this but thereâ€™s an example in the tests that shows it off: <a href="https://t.co/ff5Am0fsCW">https://t.co/ff5Am0fsCW</a> (some) docs: <a href="https://t.co/hg9G2NenIM">https://t.co/hg9G2NenIM</a></p>&mdash; Jonathan Keane (@jonkeane) <a href="https://twitter.com/jonkeane/status/1560016227824721920?ref_src=twsrc%5Etfw">August 17, 2022</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>  -->

## Check my pyarrow

<!-- arrow::install_pyarrow() -->

```{python check-version}
# python
import sys
print(sys.version)
print(sys.executable)
```




```{python check-pyarrow}
# python
import pyarrow
pyarrow.__version__
```



## Handover from R to Python

```{r}
# R
arr <- arrow::arrow_table(iris)
arr

py_arr <- reticulate::r_to_py(arr)
py_arr
```

```{python}
# python
r.py_arr
```

## Handover from Python to R

```{python}
# python
boring = pyarrow.array([1,2,3])
boring
```


```{r}
# R
reticulate::py$boring
```



<br><br>



<!--------------- appendices go here ----------------->

```{r, echo=FALSE}
source("appendix.R")
```



