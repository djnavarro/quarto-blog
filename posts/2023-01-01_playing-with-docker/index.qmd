---
title: "Playing with docker and the GitHub container registry"
author:
  - name: Danielle Navarro
    url: https://djnavarro.net
    affiliation: I'm on smoko
    affiliation-url: https://www.youtube.com/watch?v=j58V2vC9EPc
    orcid: 0000-0001-7648-6578
description: "There is no reason for this."
date: "2023-01-01"
categories: [Linux, R, Docker]
image: "containers.jpg"
---

<!-- image credit: 
  Teng Yuhong
  https://unsplash.com/photos/qMehmIyaXvY
-->

<!--------------- my typical setup ----------------->

```{r setup, include=FALSE}
set.seed(8)
long_slug <- "2023-01-01_playing-with-docker"
#renv::use(lockfile = "renv.lock")
wide <- 136
narrow <- 76
options(width = narrow)
```

<!--------------- post begins here ----------------->


The docker reference documentation:
https://docs.docker.com/reference/

Giving docker sudo privileges:
https://docs.docker.com/engine/install/linux-postinstall/

The rocker project by Carl Boettiger, Dirk Eddelbuettel, Noam Ross, and Shima Tatsuya:
https://rocker-project.org/

The rocker project repositories:
https://github.com/rocker-org/rocker

Blog post by Colin Fay: 
https://colinfay.me/docker-r-reproducibility/

Slides by Noam Ross:
https://github.com/noamross/nyhackr-docker-talk

Docker for beginners:
https://docker-curriculum.com/

Working with GitHub Container Registry:
https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry

Create a github PAT with only the scopes we need:

- `read:packages` scope to download container images and read metadata.
- `write:packages` scope to download and upload container images and read and write metadata.
- `delete:packages` scope to delete container images.


```
export CR_PAT=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxx
```

Login, badly:

```
echo $CR_PAT | docker login ghcr.io -u djnavarro --password-stdin
```

This throws a warning because I haven't configured a credential helper for Docker. That's on my to-do list. Even in the context of "learning to use Docker" I feel uncomfortable about this.

Build the image with the appropriate tag:

```
docker build -t ghcr.io/djnavarro/arch-r-base:version1 .
```

Push the image to the GitHub container registry:

```
docker push ghcr.io/djnavarro/arch-r-base:version1
```

It looks like you can configure GitHub Actions workflows so that pushing changes to the source repo will trigger a docker build in the container registry. That seems like a nice feature and one I would want to use if I were using this for anything more than "teaching myself Docker".


The workflow for my simple script:

```
docker build -t systemcheck .
docker run systemcheck
```


<!--------------- appendices go here ----------------->
