{
  "hash": "18e2a144a078e5cfc77e3a6587327904",
  "result": {
    "markdown": "---\ntitle: Passing Arrow data between Python and R with rpy2\ndescription: 'Part two of the data-sharing post. An approach to sharing Arrow Tables between R and Python, using the rpy2 Python module in place of the reticulate R package. The same goal is achieved, using a slightly more Pythonic toolkit'\ndate: '2022-09-02'\ncategories:\n  - Apache Arrow\n  - R\n  - Python\nimage: img/cover.jpg\n---\n\n<!-- \ncover img: https://unsplash.com/photos/C4sxVxcXEQg\nartist: Reuben Juarez\nlicence: unsplash free-to-use \n-->\n\n<!-- \n# bash commands to build this post\nconda activate continuation\ncd ~/GitHub/sites/quarto-blog/posts/2022-09-02_arrow-and-rpy2\nquarto render index.qmd --execute-daemon-restart\n-->\n\nIn the [last post on this blog](/posts/2022-09-01_reticulated-arrow/) I showed how Apache Arrow makes it possible to hand over data sets from R to Python (and vice versa) without making wasteful copies of the data. \n\nThe solution I outlined there was to use the [reticulate](https://rstudio.github.io/reticulate/) package to conduct the handover, and rely on Arrow tools both sides to manage the data. In one sense it's a perfectly good solution to the problem... but it's a solution tailor made for R users who need access to Python. When viewed from the perspective of a Python user who needs access to R, it's a little awkward to have an R package (reticulate) governing the handover.^[Relatedly, if you're a Python user blogging in quarto, you are very unlikely to be using the [knitr engine](https://quarto.org/docs/reference/cells/cells-knitr.html) to execute code like I did in the last blog post. Instead you're almost certainly using the [jupyter engine](https://quarto.org/docs/reference/cells/cells-jupyter.html). With that in mind, and with the goal of making this post a little more Pythonic, I'm using Jupyter this time.] Perhaps we can find a more Pythonic way to approach this?\n\nA solution to our problem is provided by the [rpy2 module](https://rpy2.github.io/) that provides an interface to R from Python, and the [rpy2-arrow extension module](https://rpy2.github.io/rpy2-arrow/version/main/html/index.html) that allows it to support Arrow objects. Let's take a look, shall we?\n\nIn writing this post I am heavily indebted to Isabella VelÃ¡squez, whose fabulous post on [calling R from Python with rpy2](https://rviews.rstudio.com/2022/05/25/calling-r-from-python-with-rpy2/) helped me immensely. The [documentation on integrating PyArrow with R](https://arrow.apache.org/docs/python/integration/python_r.html) was extremely helpful too!\n\n## Setting up the Python environment\n\nFor the purposes of this post I'll create a fresh conda environment that I'll call \"continuation\", both because this post is a continuation of the previous one and because the data set I'll use later is called \"To Be Continued...\". I was able install most packages I need through conda-forge, but for rpy2 and rpy2-arrow I was only able to do so from pypi so I had to use pip for that. So the code for setting up my Python environment was as follows:\n\n``` bash\nconda create -n continuation\nconda install -n continuation pip pyarrow pandas jupyter\nconda activate continuation\npip install rpy2 rpy2-arrow\n```\n\n\n## Introducing rpy2\n\nThis just imports the package\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport rpy2\nrpy2.__version__\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n'3.5.4'\n```\n:::\n:::\n\n\nImporting the robjects submodule also starts the embedded R session:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport rpy2.robjects as robjects\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\f\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.1 (2022-06-23) ðŸŒˆ\n```\n:::\n:::\n\n\nNormally you'd see a more verbose startup message from R but I prefer to keep mine quieter so all it does is print the version string and a pretty little rainbow. \n\nMeanwhile let's going with some packages. Importing the packages submodule gives us acces to `importr()`, which is allows us to load pacakges inside the R session:\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nimport rpy2.robjects.packages as rpackages\n\nbase = rpackages.importr(\"base\")\nutils = rpackages.importr(\"utils\")\n```\n:::\n\n\nOnce we have access to utils we can call the native R function `install.packages()` to install additional packages from CRAN. A fun example:\n\n``` python\nutils.install_packages(\"fortunes\")\n```\n\nLet's sample a fortune \n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nfortunes = rpackages.importr(\"fortunes\")\nfortune = fortunes.fortune(3)\nprint(fortune)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nI'm always thrilled when people discover what lexical scoping really means.\n   -- Robert Gentleman\n      Statistical Computing 2003, Reisensburg (June 2003)\n\n\n```\n:::\n:::\n\n\n## About the data \n\nThe data set for this post comes from the [To Be Continued](https://cdhrdatasys.anu.edu.au/tobecontinued/) database of fiction published in Australian newspapers during the 19th and early 20th century. Originally collected using the incredibly cool [Trove](https://trove.nla.gov.au/) resource run by the National Library of Australia, it's released under a CC-BY-4.0 licence and maintained by Katherine Bode and Carol Hetherington. \n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nimport pandas as pd\nfiction = pd.read_csv(\"newspaper-fiction.csv\", low_memory = False)\nfiction.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Trove ID</th>\n      <th>Common Title</th>\n      <th>Publication Title</th>\n      <th>Start Date</th>\n      <th>End Date</th>\n      <th>Additional Info</th>\n      <th>Length</th>\n      <th>Curated Dataset</th>\n      <th>Identified Sources</th>\n      <th>Publication Source</th>\n      <th>...</th>\n      <th>Other Names</th>\n      <th>Publication Author</th>\n      <th>Gender</th>\n      <th>Nationality</th>\n      <th>Nationality Details</th>\n      <th>Author Details</th>\n      <th>Inscribed Gender</th>\n      <th>Inscribed Nationality</th>\n      <th>Signature</th>\n      <th>Name Category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>The Mystery of Edwin Drood</td>\n      <td>The Mystery of Edwin Drood</td>\n      <td>1871-03-04</td>\n      <td>1871-06-03</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Y</td>\n      <td>LCVF</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>Dickens, Charles</td>\n      <td>Male</td>\n      <td>British</td>\n      <td>NaN</td>\n      <td>LCVF</td>\n      <td>Male</td>\n      <td>British</td>\n      <td>NaN</td>\n      <td>Attributed</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>The Mystery of Edwin Drood</td>\n      <td>The Mystery of Edwin Drood</td>\n      <td>1871-03-07</td>\n      <td>1871-05-16</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Y</td>\n      <td>LCVF</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>Dickens, Charles</td>\n      <td>Male</td>\n      <td>British</td>\n      <td>NaN</td>\n      <td>LCVF</td>\n      <td>Male</td>\n      <td>British</td>\n      <td>NaN</td>\n      <td>Attributed</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>Sporting Recollections in Various Countries</td>\n      <td>Sporting Recollections in Various Countries</td>\n      <td>1847-06-16</td>\n      <td>1847-07-07</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Y</td>\n      <td>WPEDIA</td>\n      <td>Sunday Times</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>Viardot, M. Louis</td>\n      <td>Male</td>\n      <td>French</td>\n      <td>NaN</td>\n      <td>WPEDIA</td>\n      <td>Male</td>\n      <td>British</td>\n      <td>NaN</td>\n      <td>Attributed</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>Brownie's Triumph</td>\n      <td>The Jewels</td>\n      <td>1880-05-08</td>\n      <td>1880-08-14</td>\n      <td>NaN</td>\n      <td>0.0</td>\n      <td>Y</td>\n      <td>TJW</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>Sarah Elizabeth Forbush Downs; Downs, Mrs Geor...</td>\n      <td>Unattributed</td>\n      <td>Female</td>\n      <td>American</td>\n      <td>NaN</td>\n      <td>WPEDIA</td>\n      <td>Uninscribed</td>\n      <td>British</td>\n      <td>NaN</td>\n      <td>Unattributed</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>The Forsaken Bride</td>\n      <td>Abandoned</td>\n      <td>1880-08-21</td>\n      <td>1880-12-18</td>\n      <td>Fiction. From English, American and Other Peri...</td>\n      <td>0.0</td>\n      <td>Y</td>\n      <td>TJW</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>Sarah Elizabeth Forbush Downs; Downs, Mrs Geor...</td>\n      <td>Unattributed</td>\n      <td>Female</td>\n      <td>American</td>\n      <td>NaN</td>\n      <td>WPEDIA</td>\n      <td>Uninscribed</td>\n      <td>British</td>\n      <td>NaN</td>\n      <td>Unattributed</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 28 columns</p>\n</div>\n```\n:::\n:::\n\n\n## Panda to Arrow Table\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nimport pyarrow\npyarrow_fiction = pyarrow.Table.from_pandas(fiction)\npyarrow_fiction\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\npyarrow.Table\nTrove ID: int64\nCommon Title: string\nPublication Title: string\nStart Date: string\nEnd Date: string\nAdditional Info: string\nLength: double\nCurated Dataset: string\nIdentified Sources: string\nPublication Source: string\nNewspaper ID: int64\nNewspaper: string\nNewspaper Common Title: string\nNewspaper Location: string\nNewspaper Type: string\nColony/State: string\nAuthor ID: int64\nAuthor: string\nOther Names: string\nPublication Author: string\nGender: string\nNationality: string\nNationality Details: string\nAuthor Details: string\nInscribed Gender: string\nInscribed Nationality: string\nSignature: string\nName Category : string\n----\nTrove ID: [[1,2,3,4,5,...,35491,35492,35493,35494,35495]]\nCommon Title: [[\"The Mystery of Edwin Drood\",\"The Mystery of Edwin Drood\",\"Sporting Recollections in Various Countries\",\"Brownie's Triumph\",\"The Forsaken Bride\",...,\"The Heart of Maureen\",\"His Lawful Wife\",\"Love's Reward\",\"Only a Flirt\",\"The Doctor's Protegee\"]]\nPublication Title: [[\"The Mystery of Edwin Drood\",\"The Mystery of Edwin Drood\",\"Sporting Recollections in Various Countries\",\"The Jewels\",\"Abandoned\",...,\"The Heart of Maureen\",\"His Lawful Wife\",\"Love's Reward\",\"Only a Flirt\",\"The Doctor's Protegee\"]]\nStart Date: [[\"1871-03-04\",\"1871-03-07\",\"1847-06-16\",\"1880-05-08\",\"1880-08-21\",...,\"1914-01-06\",\"1912-10-26\",\"1911-02-04\",\"1916-05-06\",\"1911-11-25\"]]\nEnd Date: [[\"1871-06-03\",\"1871-05-16\",\"1847-07-07\",\"1880-08-14\",\"1880-12-18\",...,\"1914-01-06\",\"1912-10-26\",\"1911-02-04\",\"1916-05-06\",\"1911-11-25\"]]\nAdditional Info: [[null,null,null,null,\"Fiction. From English, American and Other Periodicals\",...,\"Published by special arrangement. All rights reserved.\",\"Published by special arrangement. All rights reserved.\",\"Published by special arrangement. All rights reserved.\",\"All  Rights Reserved\",\"Published by special arrangement. All rights reserved.\"]]\nLength: [[0,0,0,0,0,...,0,0,0,0,0]]\nCurated Dataset: [[\"Y\",\"Y\",\"Y\",\"Y\",\"Y\",...,\"N\",\"N\",\"N\",\"N\",\"N\"]]\nIdentified Sources: [[\"LCVF\",\"LCVF\",\"WPEDIA\",\"TJW\",\"TJW\",...,null,null,null,null,null]]\nPublication Source: [[null,null,\"Sunday Times\",null,null,...,null,null,null,null,null]]\n...\n```\n:::\n:::\n\n\n## Passing Tables from Python to R\n\nThis is done with the [rpy2-arrow module](https://rpy2.github.io/rpy2-arrow/version/main/html/index.html)\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nimport rpy2_arrow.pyarrow_rarrow as pyra\n\nrarrow_fiction = pyra.pyarrow_to_r_table(pyarrow_fiction)\nrarrow_fiction\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n<rpy2.robjects.environments.Environment object at 0x7f0ac8764980> [RTYPES.ENVSXP]\nR classes: ('Table', 'ArrowTabular', 'ArrowObject', 'R6')\nn items: 36\n```\n:::\n:::\n\n\n## Calling R code \n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n%load_ext rpy2.ipython\n```\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\n%%R\nsuppressMessages({\n  library(dplyr)\n  library(arrow)\n})\n```\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n%%R -i rarrow_fiction\ngender <- rarrow_fiction |> \n  count(Gender) |>\n  compute()\n  \ngender\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nTable\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n6 rows x 2 columns\n$Gender <string>\n$n <int64>\n\nSee $metadata for additional Schema metadata\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n```\n:::\n:::\n\n\n## Passing Tables from R to Python\n\nEarlier we imported `robjects` to start the embedded R session. We can access the R objects using `robjects.r`. For example:\n\n::: {.cell execution_count=11}\n``` {.python .cell-code}\nr_gender = robjects.r('gender')\nr_gender\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\n<rpy2.robjects.environments.Environment object at 0x7f0ac9177d40> [RTYPES.ENVSXP]\nR classes: ('Table', 'ArrowTabular', 'ArrowObject', 'R6')\nn items: 36\n```\n:::\n:::\n\n\nNote that the `r_gender` variable refers to the Arrow Table in R. It's not a pyarrow table. We can use pyra to make the converson:\n\n::: {.cell execution_count=12}\n``` {.python .cell-code}\npy_gender = pyra.rarrow_to_py_table(r_gender)\npy_gender\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n```\npyarrow.Table\nGender: string\nn: int64\n----\nGender: [[\"Male\",\"Female\",\"Unknown\",\"Both\",\"Multiple\",null]]\nn: [[11299,6878,15083,106,176,31]]\n```\n:::\n:::\n\n\n## Back to Pandas\n\nIf we really want to, we can now convert this back to a Pandas DataFrame\n\n::: {.cell execution_count=13}\n``` {.python .cell-code}\npanda_gender = pyarrow.Table.to_pandas(py_gender)\npanda_gender\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Gender</th>\n      <th>n</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Male</td>\n      <td>11299</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Female</td>\n      <td>6878</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Unknown</td>\n      <td>15083</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Both</td>\n      <td>106</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Multiple</td>\n      <td>176</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>None</td>\n      <td>31</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}