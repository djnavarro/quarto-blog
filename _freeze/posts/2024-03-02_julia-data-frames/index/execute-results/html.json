{
  "hash": "f81214a9e73992b9a238de003791ce1a",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Working with data in Julia\ndescription: This is a subtitle\ndate: '2024-03-02'\ncategories:\n  - Julia\n  - Data Wrangling\n---\n\n\n<!--------------- post begins here ----------------->\n\n\n\n\n::: {.column-margin}\n\n![[Mass Effect 1](https://www.deviantart.com/lagota/art/Mass-Effect-1-Final-Poster-295106207). By user [lagota](https://www.deviantart.com/lagota) on Deviant Art, released under a CC-BY-NC-ND licence.](mass-effect-1.jpg){fig-alt=\"Reimagined Mass Effect 1 cover showing the Normandy departing the Citadel\"}\n\n:::\n\n## Data frames I\n\nUnlike R, Julia doesn't come with a native class to represent data frames. Instead, there is the DataFrames package which provides the functionality needed to represent tabular data. The `DataFrame()` function allows you to manually construct a data frame, with a syntax that feels very familiar to an R user. Vectors passed as inputs to `DataFrame()` must all have one element for every row in the data frame, or else be length one. So I could construct a small data frame listing the novels from William Gibson's \"Sprawl\" trilogy like this:\n\n::: {#9c7952e3 .cell execution_count=2}\n``` {.julia .cell-code}\nusing DataFrames\n\nsprawl = DataFrame(\n  title = [\"Neuromancer\", \"Count Zero\", \"Mona Lisa Overdrive\"],\n  published = [1984, 1986, 1988], \n  author = \"William Gibson\"\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=47}\n```{=html}\n<div><div style = \"float: left;\"><span>3×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">title</th><th style = \"text-align: left;\">published</th><th style = \"text-align: left;\">author</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String\" style = \"text-align: left;\">String</th><th title = \"Int64\" style = \"text-align: left;\">Int64</th><th title = \"String\" style = \"text-align: left;\">String</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Neuromancer</td><td style = \"text-align: right;\">1984</td><td style = \"text-align: left;\">William Gibson</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Count Zero</td><td style = \"text-align: right;\">1986</td><td style = \"text-align: left;\">William Gibson</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Mona Lisa Overdrive</td><td style = \"text-align: right;\">1988</td><td style = \"text-align: left;\">William Gibson</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nData frames have pretty print methods so the output looks quite nice here. But internally it's essentially a collection of vectors, one for each column. For example, `sprawl.title` is a vector of three strings:\n\n::: {#7edb33c3 .cell execution_count=3}\n``` {.julia .cell-code}\nsprawl.title\n```\n\n::: {.cell-output .cell-output-display execution_count=48}\n```\n3-element Vector{String}:\n \"Neuromancer\"\n \"Count Zero\"\n \"Mona Lisa Overdrive\"\n```\n:::\n:::\n\n\nIn real life though, you don't usually construct a data frame manually. It's more typical to import a data frame from a CSV file or similar. To that end, we can take advantage of the CSV package to read data from a data file:\n\n::: {#8467ed35 .cell execution_count=4}\n``` {.julia .cell-code}\nusing CSV\nstarwars_csv = CSV.File(\"starwars.csv\"; missingstring = \"NA\");\n```\n:::\n\n\nThis `starwars_csv` object isn't a data frame yet, it's an object of type CSV.file. Data frames are *columnar* data structures (i.e., a collection of vectors, one per column), whereas a CSV.file is a *rowwise* data structure (i.e., a collection of CSV.row objects, one per row). We can see this by taking a look at the first element in the `starwars_csv` object:\n\n::: {#11731ac9 .cell execution_count=5}\n``` {.julia .cell-code}\nstarwars_csv[1]\n```\n\n::: {.cell-output .cell-output-display execution_count=50}\n```\nCSV.Row: (name = String31(\"Luke Skywalker\"), height = 172, mass = 77.0, hair_color = String15(\"blond\"), skin_color = String31(\"fair\"), eye_color = String15(\"blue\"), birth_year = 19.0, sex = String15(\"male\"), gender = String15(\"masculine\"), homeworld = String15(\"Tatooine\"), species = String15(\"Human\"))\n```\n:::\n:::\n\n\nTo convert this to a DataFrame object, we simply pass it to `DataFrame()`:\n\n::: {#2319d13d .cell execution_count=6}\n``` {.julia .cell-code}\nstarwars = DataFrame(starwars_csv)\n```\n\n::: {.cell-output .cell-output-display execution_count=51}\n```{=html}\n<div><div style = \"float: left;\"><span>87×11 DataFrame</span></div><div style = \"float: right;\"><span style = \"font-style: italic;\">62 rows omitted</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">height</th><th style = \"text-align: left;\">mass</th><th style = \"text-align: left;\">hair_color</th><th style = \"text-align: left;\">skin_color</th><th style = \"text-align: left;\">eye_color</th><th style = \"text-align: left;\">birth_year</th><th style = \"text-align: left;\">sex</th><th style = \"text-align: left;\">gender</th><th style = \"text-align: left;\">homeworld</th><th style = \"text-align: left;\">species</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"Union{Missing, Int64}\" style = \"text-align: left;\">Int64?</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String15\" style = \"text-align: left;\">String15</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Luke Skywalker</td><td style = \"text-align: right;\">172</td><td style = \"text-align: right;\">77.0</td><td style = \"text-align: left;\">blond</td><td style = \"text-align: left;\">fair</td><td style = \"text-align: left;\">blue</td><td style = \"text-align: right;\">19.0</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">C-3PO</td><td style = \"text-align: right;\">167</td><td style = \"text-align: right;\">75.0</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">gold</td><td style = \"text-align: left;\">yellow</td><td style = \"text-align: right;\">112.0</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td><td style = \"text-align: left;\">Droid</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">R2-D2</td><td style = \"text-align: right;\">96</td><td style = \"text-align: right;\">32.0</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">white, blue</td><td style = \"text-align: left;\">red</td><td style = \"text-align: right;\">33.0</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Naboo</td><td style = \"text-align: left;\">Droid</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Darth Vader</td><td style = \"text-align: right;\">202</td><td style = \"text-align: right;\">136.0</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">white</td><td style = \"text-align: left;\">yellow</td><td style = \"text-align: right;\">41.9</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Leia Organa</td><td style = \"text-align: right;\">150</td><td style = \"text-align: right;\">49.0</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">light</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: right;\">19.0</td><td style = \"text-align: left;\">female</td><td style = \"text-align: left;\">feminine</td><td style = \"text-align: left;\">Alderaan</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Owen Lars</td><td style = \"text-align: right;\">178</td><td style = \"text-align: right;\">120.0</td><td style = \"text-align: left;\">brown, grey</td><td style = \"text-align: left;\">light</td><td style = \"text-align: left;\">blue</td><td style = \"text-align: right;\">52.0</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Beru Whitesun Lars</td><td style = \"text-align: right;\">165</td><td style = \"text-align: right;\">75.0</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">light</td><td style = \"text-align: left;\">blue</td><td style = \"text-align: right;\">47.0</td><td style = \"text-align: left;\">female</td><td style = \"text-align: left;\">feminine</td><td style = \"text-align: left;\">Tatooine</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">R5-D4</td><td style = \"text-align: right;\">97</td><td style = \"text-align: right;\">32.0</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">white, red</td><td style = \"text-align: left;\">red</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td><td style = \"text-align: left;\">Droid</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Biggs Darklighter</td><td style = \"text-align: right;\">183</td><td style = \"text-align: right;\">84.0</td><td style = \"text-align: left;\">black</td><td style = \"text-align: left;\">light</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: right;\">24.0</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Obi-Wan Kenobi</td><td style = \"text-align: right;\">182</td><td style = \"text-align: right;\">77.0</td><td style = \"text-align: left;\">auburn, white</td><td style = \"text-align: left;\">fair</td><td style = \"text-align: left;\">blue-gray</td><td style = \"text-align: right;\">57.0</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Stewjon</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Anakin Skywalker</td><td style = \"text-align: right;\">188</td><td style = \"text-align: right;\">84.0</td><td style = \"text-align: left;\">blond</td><td style = \"text-align: left;\">fair</td><td style = \"text-align: left;\">blue</td><td style = \"text-align: right;\">41.9</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Wilhuff Tarkin</td><td style = \"text-align: right;\">180</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">auburn, grey</td><td style = \"text-align: left;\">fair</td><td style = \"text-align: left;\">blue</td><td style = \"text-align: right;\">64.0</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Eriadu</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Chewbacca</td><td style = \"text-align: right;\">228</td><td style = \"text-align: right;\">112.0</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">unknown</td><td style = \"text-align: left;\">blue</td><td style = \"text-align: right;\">200.0</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Kashyyyk</td><td style = \"text-align: left;\">Wookiee</td></tr><tr><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td><td style = \"text-align: right;\">&vellip;</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">76</td><td style = \"text-align: left;\">San Hill</td><td style = \"text-align: right;\">191</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">grey</td><td style = \"text-align: left;\">gold</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Muunilinst</td><td style = \"text-align: left;\">Muun</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">77</td><td style = \"text-align: left;\">Shaak Ti</td><td style = \"text-align: right;\">178</td><td style = \"text-align: right;\">57.0</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">red, blue, white</td><td style = \"text-align: left;\">black</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">female</td><td style = \"text-align: left;\">feminine</td><td style = \"text-align: left;\">Shili</td><td style = \"text-align: left;\">Togruta</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">78</td><td style = \"text-align: left;\">Grievous</td><td style = \"text-align: right;\">216</td><td style = \"text-align: right;\">159.0</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">brown, white</td><td style = \"text-align: left;\">green, yellow</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Kalee</td><td style = \"text-align: left;\">Kaleesh</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">79</td><td style = \"text-align: left;\">Tarfful</td><td style = \"text-align: right;\">234</td><td style = \"text-align: right;\">136.0</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">blue</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Kashyyyk</td><td style = \"text-align: left;\">Wookiee</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">80</td><td style = \"text-align: left;\">Raymus Antilles</td><td style = \"text-align: right;\">188</td><td style = \"text-align: right;\">79.0</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">light</td><td style = \"text-align: left;\">brown</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Alderaan</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">81</td><td style = \"text-align: left;\">Sly Moore</td><td style = \"text-align: right;\">178</td><td style = \"text-align: right;\">48.0</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">pale</td><td style = \"text-align: left;\">white</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">Umbara</td><td style = \"font-style: italic; text-align: left;\">missing</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">82</td><td style = \"text-align: left;\">Tion Medon</td><td style = \"text-align: right;\">206</td><td style = \"text-align: right;\">80.0</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">grey</td><td style = \"text-align: left;\">black</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Utapau</td><td style = \"text-align: left;\">Pau&apos;an</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">83</td><td style = \"text-align: left;\">Finn</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">black</td><td style = \"text-align: left;\">dark</td><td style = \"text-align: left;\">dark</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">84</td><td style = \"text-align: left;\">Rey</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">light</td><td style = \"text-align: left;\">hazel</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">female</td><td style = \"text-align: left;\">feminine</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">85</td><td style = \"text-align: left;\">Poe Dameron</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">light</td><td style = \"text-align: left;\">brown</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">86</td><td style = \"text-align: left;\">BB8</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">black</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">masculine</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">Droid</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">87</td><td style = \"text-align: left;\">Captain Phasma</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">unknown</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">female</td><td style = \"text-align: left;\">feminine</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">Human</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nThe core tools for working with data frames in Julia feel quite familiar coming from either Matlab or R. You can subset a data frame by passing it numeric indices, for instance:\n\n::: {#5affcdaf .cell execution_count=7}\n``` {.julia .cell-code}\nstarwars[1:6, 1:5]\n```\n\n::: {.cell-output .cell-output-display execution_count=52}\n```{=html}\n<div><div style = \"float: left;\"><span>6×5 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">height</th><th style = \"text-align: left;\">mass</th><th style = \"text-align: left;\">hair_color</th><th style = \"text-align: left;\">skin_color</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"Union{Missing, Int64}\" style = \"text-align: left;\">Int64?</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"String31\" style = \"text-align: left;\">String31</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Luke Skywalker</td><td style = \"text-align: right;\">172</td><td style = \"text-align: right;\">77.0</td><td style = \"text-align: left;\">blond</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">C-3PO</td><td style = \"text-align: right;\">167</td><td style = \"text-align: right;\">75.0</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">gold</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">R2-D2</td><td style = \"text-align: right;\">96</td><td style = \"text-align: right;\">32.0</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">white, blue</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Darth Vader</td><td style = \"text-align: right;\">202</td><td style = \"text-align: right;\">136.0</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">white</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Leia Organa</td><td style = \"text-align: right;\">150</td><td style = \"text-align: right;\">49.0</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">light</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Owen Lars</td><td style = \"text-align: right;\">178</td><td style = \"text-align: right;\">120.0</td><td style = \"text-align: left;\">brown, grey</td><td style = \"text-align: left;\">light</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nHowever, there are other methods for subsetting a data frame. You can also filter the rows of a data frame using logical expressions. Again, this is quite similar to how it works in base R. For instance, I can construct a boolean vector `fair_skinned` which indicates whether the corresponding row in `starwars` refers to a person with fair skin:^[As an aside, notice that I've used `.==` rather than `==` as the equality test. This is because `==` is a scalar operator: it doesn't work for vectors unless you broadcast it using `.`]\n\n::: {#afbe58c7 .cell execution_count=8}\n``` {.julia .cell-code}\nfair_skinned = starwars.skin_color .== \"fair\";\n```\n:::\n\n\nNow that I have these indices, I can create a subset of the data frame containing only those rows referring to fair skinned person (or robot, or...)\n\n::: {#69b75177 .cell execution_count=9}\n``` {.julia .cell-code}\nstarwars[fair_skinned, 1:5]\n```\n\n::: {.cell-output .cell-output-display execution_count=54}\n```{=html}\n<div><div style = \"float: left;\"><span>17×5 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">height</th><th style = \"text-align: left;\">mass</th><th style = \"text-align: left;\">hair_color</th><th style = \"text-align: left;\">skin_color</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"Union{Missing, Int64}\" style = \"text-align: left;\">Int64?</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"String31\" style = \"text-align: left;\">String31</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Luke Skywalker</td><td style = \"text-align: right;\">172</td><td style = \"text-align: right;\">77.0</td><td style = \"text-align: left;\">blond</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">Obi-Wan Kenobi</td><td style = \"text-align: right;\">182</td><td style = \"text-align: right;\">77.0</td><td style = \"text-align: left;\">auburn, white</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">Anakin Skywalker</td><td style = \"text-align: right;\">188</td><td style = \"text-align: right;\">84.0</td><td style = \"text-align: left;\">blond</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Wilhuff Tarkin</td><td style = \"text-align: right;\">180</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">auburn, grey</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Han Solo</td><td style = \"text-align: right;\">180</td><td style = \"text-align: right;\">80.0</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Wedge Antilles</td><td style = \"text-align: right;\">170</td><td style = \"text-align: right;\">77.0</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">7</td><td style = \"text-align: left;\">Jek Tono Porkins</td><td style = \"text-align: right;\">180</td><td style = \"text-align: right;\">110.0</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">8</td><td style = \"text-align: left;\">Boba Fett</td><td style = \"text-align: right;\">183</td><td style = \"text-align: right;\">78.2</td><td style = \"text-align: left;\">black</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">9</td><td style = \"text-align: left;\">Mon Mothma</td><td style = \"text-align: right;\">150</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">auburn</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">10</td><td style = \"text-align: left;\">Arvel Crynyd</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">11</td><td style = \"text-align: left;\">Qui-Gon Jinn</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">89.0</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">12</td><td style = \"text-align: left;\">Finis Valorum</td><td style = \"text-align: right;\">170</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">blond</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">13</td><td style = \"text-align: left;\">Ric Olié</td><td style = \"text-align: right;\">183</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">14</td><td style = \"text-align: left;\">Shmi Skywalker</td><td style = \"text-align: right;\">163</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">black</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">15</td><td style = \"text-align: left;\">Cliegg Lars</td><td style = \"text-align: right;\">183</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">16</td><td style = \"text-align: left;\">Dooku</td><td style = \"text-align: right;\">193</td><td style = \"text-align: right;\">80.0</td><td style = \"text-align: left;\">white</td><td style = \"text-align: left;\">fair</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">17</td><td style = \"text-align: left;\">Jocasta Nu</td><td style = \"text-align: right;\">167</td><td style = \"font-style: italic; text-align: right;\">missing</td><td style = \"text-align: left;\">white</td><td style = \"text-align: left;\">fair</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nOn the columns side, we also have more flexible options for subsetting a data frame. For example, instead of referring to columns using numerical indices, we can select the variables that we want to keep using their names:\n\n::: {#bd3426d8 .cell execution_count=10}\n``` {.julia .cell-code}\nstarwars[1:6, [:name, :gender, :homeworld]]\n```\n\n::: {.cell-output .cell-output-display execution_count=55}\n```{=html}\n<div><div style = \"float: left;\"><span>6×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">gender</th><th style = \"text-align: left;\">homeworld</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Luke Skywalker</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">C-3PO</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">R2-D2</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Naboo</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Darth Vader</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Leia Organa</td><td style = \"text-align: left;\">feminine</td><td style = \"text-align: left;\">Alderaan</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Owen Lars</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nThis syntax is worth unpacking slightly, so I'll digress slightly to talk about...\n\n## Symbols\n\nLooking at the syntax in the last code cell, it's fairly clear that `[:name, :gender, :homeworld]` is a vector of three... somethings, but it's not immediately obvious what `:name` actually is. Much like R (and also inherited from Lisp) Julia has extensive [Metaprogramming](https://docs.julialang.org/en/v1/manual/metaprogramming/) capabilities because it has the ability to represent Julia code as data structures within the language itself. In the simplest case, we have [Symbols](https://docs.julialang.org/en/v1/base/base/#Core.Symbol) like `:name`, which are constructed using the quotation operator `:` and used to represent object names. So as you can see, `:name` is an object of type Symbol:\n\n::: {#2ccd0a92 .cell execution_count=11}\n``` {.julia .cell-code}\ntypeof(:name)\n```\n\n::: {.cell-output .cell-output-display execution_count=56}\n```\nSymbol\n```\n:::\n:::\n\n\nSymbols can be assigned to variables, and those variables can be used as part of expressions to be evaluated. In the code below I create a variable `colname` that stores the symbolic representation of a column name that I can invoke later:\n\n::: {#3b3006ec .cell execution_count=12}\n``` {.julia .cell-code}\ncolname = :title\n```\n\n::: {.cell-output .cell-output-display execution_count=57}\n```\n:title\n```\n:::\n:::\n\n\nAs a simple example of how symbols can be used in practice, here's a Julia implementation of something like the `pull()` function in the R package dplyr, which allows the user to extract a single column from a data frame:\n\n::: {#0b3c9ebc .cell execution_count=13}\n``` {.julia .cell-code}\nfunction pull(data::DataFrame, column::Symbol)\n  getproperty(data, column)\nend;\n```\n:::\n\n\nIn this code I'm using the `getproperty()` function to do the same job that the `.` operator would do in an expression like `sprawl.title`. So here it is in action:\n\n::: {#8acd70b1 .cell execution_count=14}\n``` {.julia .cell-code}\npull(sprawl, :title)\n```\n\n::: {.cell-output .cell-output-display execution_count=59}\n```\n3-element Vector{String}:\n \"Neuromancer\"\n \"Count Zero\"\n \"Mona Lisa Overdrive\"\n```\n:::\n:::\n\n\nAt the moment this `pull()` function isn't very useful at all -- `pull(sprawl, :title)` is really not an improvement on `sprawl.title` -- but a little bit later when I get around to talking about pipes in Julia it will potentially more valuable.\n\n\n::: {.column-margin}\n\n![[Mass Effect 2](https://www.deviantart.com/lagota/art/Mass-Effect-2-Final-Poster-294884760). By user [lagota](https://www.deviantart.com/lagota) on Deviant Art, released under a CC-BY-NC-ND licence.](mass-effect-2.jpg){fig-alt=\"Reimagined Mass Effect 2 cover showing the Normandy attacked by a Collector ship\"}\n\n:::\n\n\n## Data frames II\n\nAnyway, getting back on track, the key thing to realise is that when I wrote `[:name, :gender, :homeworld]` earlier what I was really doing is constructing a vector of symbols, and it's those symbols that I was using to select the columns that I wanted to retain. The DataFrames package also supplies a various selector functions that can be used to extract a subset of the columns. For example, `Not()` will select every column except the ones that are passed to `Not()`. So if I want to drop the hair color, eye color, sex, and homeworld columns, I could do this:\n\n::: {#7230318a .cell execution_count=15}\n``` {.julia .cell-code}\nstarwars[1:6, Not([:hair_color, :eye_color, :sex, :homeworld])]\n```\n\n::: {.cell-output .cell-output-display execution_count=60}\n```{=html}\n<div><div style = \"float: left;\"><span>6×7 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">name</th><th style = \"text-align: left;\">height</th><th style = \"text-align: left;\">mass</th><th style = \"text-align: left;\">skin_color</th><th style = \"text-align: left;\">birth_year</th><th style = \"text-align: left;\">gender</th><th style = \"text-align: left;\">species</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"Union{Missing, Int64}\" style = \"text-align: left;\">Int64?</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">Luke Skywalker</td><td style = \"text-align: right;\">172</td><td style = \"text-align: right;\">77.0</td><td style = \"text-align: left;\">fair</td><td style = \"text-align: right;\">19.0</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">C-3PO</td><td style = \"text-align: right;\">167</td><td style = \"text-align: right;\">75.0</td><td style = \"text-align: left;\">gold</td><td style = \"text-align: right;\">112.0</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Droid</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">R2-D2</td><td style = \"text-align: right;\">96</td><td style = \"text-align: right;\">32.0</td><td style = \"text-align: left;\">white, blue</td><td style = \"text-align: right;\">33.0</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Droid</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">Darth Vader</td><td style = \"text-align: right;\">202</td><td style = \"text-align: right;\">136.0</td><td style = \"text-align: left;\">white</td><td style = \"text-align: right;\">41.9</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">Leia Organa</td><td style = \"text-align: right;\">150</td><td style = \"text-align: right;\">49.0</td><td style = \"text-align: left;\">light</td><td style = \"text-align: right;\">19.0</td><td style = \"text-align: left;\">feminine</td><td style = \"text-align: left;\">Human</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">Owen Lars</td><td style = \"text-align: right;\">178</td><td style = \"text-align: right;\">120.0</td><td style = \"text-align: left;\">light</td><td style = \"text-align: right;\">52.0</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Human</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nThe `Between()` selector does what you'd think. It returns all columns in between two named columns:\n\n::: {#9ec69378 .cell execution_count=16}\n``` {.julia .cell-code}\nstarwars[1:6, Between(:sex, :homeworld)]\n```\n\n::: {.cell-output .cell-output-display execution_count=61}\n```{=html}\n<div><div style = \"float: left;\"><span>6×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">sex</th><th style = \"text-align: left;\">gender</th><th style = \"text-align: left;\">homeworld</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Naboo</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">female</td><td style = \"text-align: left;\">feminine</td><td style = \"text-align: left;\">Alderaan</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">male</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: left;\">Tatooine</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\nThere's also an `All()` selector that returns all columns, but that's not super exciting. More interesting, I think, is the `Cols()` selector which takes a predicate function as input.^[In this context, a predicate function is just one that returns `true` or `false`.] The column names are passed to the function, and they are included in the output if that function returns `true`. So, for example, if I want to extract the columns in the data whose name ends in `\"color\"` I can do this: \n\n::: {#d27f1a8e .cell execution_count=17}\n``` {.julia .cell-code}\nstarwars[1:6, Cols(x -> endswith(x, \"color\"))]\n```\n\n::: {.cell-output .cell-output-display execution_count=62}\n```{=html}\n<div><div style = \"float: left;\"><span>6×3 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">hair_color</th><th style = \"text-align: left;\">skin_color</th><th style = \"text-align: left;\">eye_color</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"String31\" style = \"text-align: left;\">String31</th><th title = \"String15\" style = \"text-align: left;\">String15</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">blond</td><td style = \"text-align: left;\">fair</td><td style = \"text-align: left;\">blue</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">gold</td><td style = \"text-align: left;\">yellow</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: left;\">white, blue</td><td style = \"text-align: left;\">red</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">4</td><td style = \"text-align: left;\">none</td><td style = \"text-align: left;\">white</td><td style = \"text-align: left;\">yellow</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">5</td><td style = \"text-align: left;\">brown</td><td style = \"text-align: left;\">light</td><td style = \"text-align: left;\">brown</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">6</td><td style = \"text-align: left;\">brown, grey</td><td style = \"text-align: left;\">light</td><td style = \"text-align: left;\">blue</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {.column-margin}\n\n![[Mass Effect 3](https://www.deviantart.com/lagota/art/Mass-Effect-3-Final-Poster-290367120). By user [lagota](https://www.deviantart.com/lagota) on Deviant Art, released under a CC-BY-NC-ND licence.](mass-effect-3.jpg){fig-alt=\"Reimagined Mass Effect 3 cover showing the Normandy facing a fleet fo reapers\"}\n\n:::\n\n## Data frames III\n\n::: {#5c725f1c .cell execution_count=18}\n``` {.julia .cell-code}\ncombine(groupby(starwars, :gender), :mass => rand) \n```\n\n::: {.cell-output .cell-output-display execution_count=63}\n```{=html}\n<div><div style = \"float: left;\"><span>3×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">gender</th><th style = \"text-align: left;\">mass_rand</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">masculine</td><td style = \"font-style: italic; text-align: right;\">missing</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">feminine</td><td style = \"font-style: italic; text-align: right;\">missing</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"text-align: right;\">110.0</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#b45d4d32 .cell execution_count=19}\n``` {.julia .cell-code}\nstarwars |>\n  d -> groupby(d, :gender) |>\n  d -> combine(d, :mass => rand)\n```\n\n::: {.cell-output .cell-output-display execution_count=64}\n```{=html}\n<div><div style = \"float: left;\"><span>3×2 DataFrame</span></div><div style = \"clear: both;\"></div></div><div class = \"data-frame\" style = \"overflow-x: scroll;\"><table class = \"data-frame\" style = \"margin-bottom: 6px;\"><thead><tr class = \"header\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">Row</th><th style = \"text-align: left;\">gender</th><th style = \"text-align: left;\">mass_rand</th></tr><tr class = \"subheader headerLastRow\"><th class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\"></th><th title = \"Union{Missing, String15}\" style = \"text-align: left;\">String15?</th><th title = \"Union{Missing, Float64}\" style = \"text-align: left;\">Float64?</th></tr></thead><tbody><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">1</td><td style = \"text-align: left;\">masculine</td><td style = \"text-align: right;\">83.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">2</td><td style = \"text-align: left;\">feminine</td><td style = \"text-align: right;\">57.0</td></tr><tr><td class = \"rowNumber\" style = \"font-weight: bold; text-align: right;\">3</td><td style = \"font-style: italic; text-align: left;\">missing</td><td style = \"font-style: italic; text-align: right;\">missing</td></tr></tbody></table></div>\n```\n:::\n:::\n\n\n::: {#bea16141 .cell execution_count=20}\n``` {.julia .cell-code}\nstarwars |>\n  d -> subset(d, :skin_color => x -> x.==\"fair\") |>\n  d -> pull(d, :name)\n```\n\n::: {.cell-output .cell-output-display execution_count=65}\n```\n17-element Vector{String31}:\n \"Luke Skywalker\"\n \"Obi-Wan Kenobi\"\n \"Anakin Skywalker\"\n \"Wilhuff Tarkin\"\n \"Han Solo\"\n \"Wedge Antilles\"\n \"Jek Tono Porkins\"\n \"Boba Fett\"\n \"Mon Mothma\"\n \"Arvel Crynyd\"\n \"Qui-Gon Jinn\"\n \"Finis Valorum\"\n \"Ric Olié\"\n \"Shmi Skywalker\"\n \"Cliegg Lars\"\n \"Dooku\"\n \"Jocasta Nu\"\n```\n:::\n:::\n\n\n## Image credit\n\nAll the lovely Mass Effect images in this post are from [lagota](https://www.deviantart.com/lagota) on DeviantArt, and are released under a CC-BY-NC-ND licence.\n\n<!-- https://www.deviantart.com/lagota/art/The-illusive-man-306521415 -->\n![](illusive-man.png)\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}