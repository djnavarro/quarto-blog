{
  "hash": "174f3a382fa74ed04b2c199e1e6f0fef",
  "result": {
    "markdown": "---\ntitle: \"Seven shiny apps\"\nauthor:\n  - name: Danielle Navarro\n    url: https://djnavarro.net\n    affiliation: I'm on smoko\n    affiliation-url: https://www.youtube.com/watch?v=j58V2vC9EPc\n    orcid: 0000-0001-7648-6578\ndescription: \"One app per day for a week\"\ndate: \"2023-03-24\"\ncategories: [Shiny, R]\n---\n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\n## App 1: Shattered lands\n\n\n- The app: [djnavarro.shinyapps.io/shattered-landscapes](https://djnavarro.shinyapps.io/shattered-landscapes/)\n- The source: [app.R](app-1/app.R)\n\nThings I like:\n\n- It works! It turns out that I haven't forgotten how to write Shiny apps\n- It uses `bslib::bs_theme()` to lightly customise the theme\n- It uses `colourpicker::colourInput()` to allow the user to input colours\n- It uses `shinycssloaders::withSpinner()` to ask the user to wait for rendering\n- It only generates an image when the action button is pressed\n\n\nThings I wish it did better:\n\n- I had to simplify it so that I wouldn't get out-of-memory errors on shinyapps.io\n- The CSS code to scale the image size in `plotOutput()` isn't ideal\n- It should probably use `bindCache()` to avoid recalculating outputs that have previously been computed for a given seed value\n\n\n\n<!--------------- appendices go here ----------------->\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}