{
  "hash": "25c63a6bac5506f048c72abcd153ffc5",
  "result": {
    "markdown": "---\ntitle: \"Population pharmacokinetic models\"\ndescription: \"In which the author works her way through an online tutorial and takes notes\"\ndate: \"2023-06-05\"\ncategories: [\"Statistics\", \"Pharmacokinetics\", \"R\"]\n---\n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\nThe [Population Approach Group of Australia and New Zealand](https://www.paganz.org/) host some useful [resources](https://www.paganz.org/resources/) for folks interested in pharmacometric modelling. Specifically they have a series of workshops are pretty handy. There's a beginner workshop in 2019 that covers the core approach, and then two intermediate workshops in 2021 and 2022. I'll work through the [2019 workshop materials](https://www.paganz.org/wp-content/uploads/2016/06/PAWs-Beginners-2019.zip) in this blog post, translating the code from NONMEM to Stan and R as needed.\n\n## Lecture 1: Introduction to the topic\n\n## Lecture 2: Hands-on exercises\n\n\n### Parsing the warfarin data\n\nLoad the data. The csv file uses `\".\"` to specify missing values, which I'll need to state explicitly when reading the data into R, thereby ensuring numeric variables end up as numeric:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwarfpk <- readr::read_csv(\"warfpk.csv\", na = \".\", show_col_types = FALSE)\nwarfpk\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 289 × 10\n   `#ID`  time    wt   age   sex   amt  rate  dvid    dv   mdv\n   <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 0       0    66.7    50     1   100    -2     0  NA       1\n 2 0       0.5  66.7    50     1    NA    NA     1   0       0\n 3 0       1    66.7    50     1    NA    NA     1   1.9     0\n 4 0       2    66.7    50     1    NA    NA     1   3.3     0\n 5 0       3    66.7    50     1    NA    NA     1   6.6     0\n 6 0       6    66.7    50     1    NA    NA     1   9.1     0\n 7 0       9    66.7    50     1    NA    NA     1  10.8     0\n 8 0      12    66.7    50     1    NA    NA     1   8.6     0\n 9 0      24    66.7    50     1    NA    NA     1   5.6     0\n10 0      36    66.7    50     1    NA    NA     1   4       0\n# ℹ 279 more rows\n```\n:::\n:::\n\n\nThe first column name is a little awkward for R, and ordinarily I'd use `janitor::clean_names()` to tidy them, but in this case it's just one column to rename so I'll use dplyr:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwarfpk <- warfpk |> dplyr::rename(id = `#ID`)\nwarfpk\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 289 × 10\n   id     time    wt   age   sex   amt  rate  dvid    dv   mdv\n   <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 0       0    66.7    50     1   100    -2     0  NA       1\n 2 0       0.5  66.7    50     1    NA    NA     1   0       0\n 3 0       1    66.7    50     1    NA    NA     1   1.9     0\n 4 0       2    66.7    50     1    NA    NA     1   3.3     0\n 5 0       3    66.7    50     1    NA    NA     1   6.6     0\n 6 0       6    66.7    50     1    NA    NA     1   9.1     0\n 7 0       9    66.7    50     1    NA    NA     1  10.8     0\n 8 0      12    66.7    50     1    NA    NA     1   8.6     0\n 9 0      24    66.7    50     1    NA    NA     1   5.6     0\n10 0      36    66.7    50     1    NA    NA     1   4       0\n# ℹ 279 more rows\n```\n:::\n:::\n\n\nThere's one slightly puzzling thing here: the `id` column looks like it's supposed to be a numeric id for the study participants, but it's been parsed as a character vector. That's usually a sign that there's a typo somewhere in the data. A bit of digging reveals there's a problem for subject 12:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwarfpk |> dplyr::filter(id |> stringr::str_detect(\"12\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 11 × 10\n   id     time    wt   age   sex   amt  rate  dvid    dv   mdv\n   <chr> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1 12      0    75.3    32     1   113    -2     0  NA       1\n 2 12      1.5  75.3    32     1    NA    NA     1   0.6     0\n 3 #12     3    75.3    32     1    NA    NA     1   2.8     0\n 4 12      6    75.3    32     1    NA    NA     1  13.8     0\n 5 12      9    75.3    32     1    NA    NA     1  15       0\n 6 12     24    75.3    32     1    NA    NA     1  10.5     0\n 7 12     36    75.3    32     1    NA    NA     1   9.1     0\n 8 12     48    75.3    32     1    NA    NA     1   6.6     0\n 9 12     72    75.3    32     1    NA    NA     1   4.9     0\n10 12     96    75.3    32     1    NA    NA     1   2.4     0\n11 12    120    75.3    32     1    NA    NA     1   1.9     0\n```\n:::\n:::\n\n\nAh. Okay, that's an easy fix:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwarfpk <- warfpk |> \n  dplyr::mutate(\n    id = id |> \n      stringr::str_remove_all(\"#\") |> \n      as.numeric()\n  )\nwarfpk\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 289 × 10\n      id  time    wt   age   sex   amt  rate  dvid    dv   mdv\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     0   0    66.7    50     1   100    -2     0  NA       1\n 2     0   0.5  66.7    50     1    NA    NA     1   0       0\n 3     0   1    66.7    50     1    NA    NA     1   1.9     0\n 4     0   2    66.7    50     1    NA    NA     1   3.3     0\n 5     0   3    66.7    50     1    NA    NA     1   6.6     0\n 6     0   6    66.7    50     1    NA    NA     1   9.1     0\n 7     0   9    66.7    50     1    NA    NA     1  10.8     0\n 8     0  12    66.7    50     1    NA    NA     1   8.6     0\n 9     0  24    66.7    50     1    NA    NA     1   5.6     0\n10     0  36    66.7    50     1    NA    NA     1   4       0\n# ℹ 279 more rows\n```\n:::\n:::\n\n\n### Interpreting the data\n\nThe csv file doesn't say give much information about the variables. However, digging into the output files included in the workshop reveals the citations for the original papers. The data originate in papers by O'Reilly and colleagues, published in 1963 and 1968. Both papers are available online in full text, and after reading through them, we can reverse engineer (most of!) a data dictionary:\n\n- `id`: Numeric value specifying the arbitrary identifier for each person\n- `time`: Time elapsed since dose was administered (in hours)\n- `wt`: Weight of each person (in kilograms)\n- `age`: Age of each person (in years)\n- `sex`: Biological sex of each person (0 = female, 1 = male)^[Technically I'm guessing the code here, but there's a lot more 1s in the data than 0s, and a lot more of male subjects reported by O'Reilly & Aggeler, so it seems a safe bet!]\n- `amt`: Dose administered to this person at this time point (in milligrams)\n- `rate`: Uncertain what this refers to, but it has value -2 when drug is administered and missing otherwise\n- `dvid`: Appears to be a dummy variable indicating whether the dependent variable was measured at this time point (0 = false, 1 = true)\n- `dv`: Measured value of the dependent variable (plasma warfarin concentration, in mg/L)\n- `mdv`: Appears to be a dummy variable that is the reverse of `dvid`, and is presumably an indicator variable whose meaning is \"missing dependent variable\" (0 = false, 1 = true)\n\nWe can see the dosing information by filtering the data on `dvid`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwarfpk |> dplyr::filter(dvid == 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 32 × 10\n      id  time    wt   age   sex   amt  rate  dvid    dv   mdv\n   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n 1     0     0  66.7    50     1   100    -2     0    NA     1\n 2     1     0  66.7    50     1   100    -2     0    NA     1\n 3     2     0  66.7    31     1   100    -2     0    NA     1\n 4     3     0  80      40     1   120    -2     0    NA     1\n 5     4     0  40      46     0    60    -2     0    NA     1\n 6     5     0  75.3    43     1   113    -2     0    NA     1\n 7     6     0  60      36     0    90    -2     0    NA     1\n 8     7     0  90      41     1   135    -2     0    NA     1\n 9     8     0  50      27     0    75    -2     0    NA     1\n10     9     0  70      28     1   105    -2     0    NA     1\n# ℹ 22 more rows\n```\n:::\n:::\n\n\nSimilarly we can see the data from a single person by filtering on `id`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwarfpk |> dplyr::filter(id == 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 10\n     id  time    wt   age   sex   amt  rate  dvid    dv   mdv\n  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1     1     0  66.7    50     1   100    -2     0  NA       1\n2     1    24  66.7    50     1    NA    NA     1   9.2     0\n3     1    36  66.7    50     1    NA    NA     1   8.5     0\n4     1    48  66.7    50     1    NA    NA     1   6.4     0\n5     1    72  66.7    50     1    NA    NA     1   4.8     0\n6     1    96  66.7    50     1    NA    NA     1   3.1     0\n7     1   120  66.7    50     1    NA    NA     1   2.5     0\n```\n:::\n:::\n\n\n### Plotting the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nwarfpk |> \n  dplyr::filter(\n    dvid == 1, # only include measured times\n    !is.na(dv) # ignore missing dv cases\n  ) |>\n  ggplot(aes(x = time, y = dv, group = id)) + \n    geom_line(color = \"grey50\") +\n    geom_point() +\n    labs(\n      x = \"Time since dose (hours)\", \n      y = \"Plasma concentration (mg/L)\"\n    )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n### Notation from NONMEM\n\nThe original workshop is designed to be conducted using [NONMEM](https://www.iconplc.com/solutions/technologies/nonmem/), and I've been told to expect that notation used by NONMEM is pretty standard in the field, so I'll try my very best to stick to that notation. For scalar quantities, however, I'll add the subscripts where relevant: $i$ refers to the $i$-th person in the study, and $j$ refers to the $j$-th observation (for that person).\n\nPopulation level (fixed effect terms):\n\n- Population mean parameters are denoted $\\theta$ (or $\\Theta$)\n- Population variance parameters are denoted $\\omega$ (or $\\Omega$)\n\nIndividual level (random effect terms):\n\n- Difference between the population mean and $i$-th individual mean $\\eta_i$\n\nError terms:\n\n- Standard deviation of error terms is denoted $\\sigma$ (or $\\Sigma$)\n- Difference between individual subject expected value and observation $\\epsilon_{ij}$`\n\n\n\n## Resources\n\n- Foster, D., Abuhelwa, A. & Hughes, J. (2019). *Population Analysis Using NONMEM Beginners Workshop*. Retrieved from: [www.paganz.org/resources/](https://www.paganz.org/resources/)\n\n- O'Reilly, R. A., & Aggeler, P. M. (1968). Studies on coumarin anticoagulant drugs: initiation of warfarin therapy without a loading dose. *Circulation, 38*(1), 169-177. [doi.org/10.1161/01.CIR.38.1.169](https://doi.org/10.1161/01.CIR.38.1.169)\n\n- O'Reilly, R. A., Aggeler, P. M., & Leong, L. S. (1963). Studies on the coumarin anticoagulant drugs: the pharmacodynamics of warfarin in man. *The Journal of Clinical Investigation, 42*(10), 1542-1551. [doi.org/10.1172%2FJCI104839](https://doi.org/10.1172%2FJCI104839)\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}