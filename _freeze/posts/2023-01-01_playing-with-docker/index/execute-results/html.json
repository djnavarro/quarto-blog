{
  "hash": "14fe13c622a88d7d3ce1326fbb63f350",
  "result": {
    "markdown": "---\ntitle: \"Playing with docker and the GitHub container registry\"\nauthor:\n  - name: Danielle Navarro\n    url: https://djnavarro.net\n    affiliation: I'm on smoko\n    affiliation-url: https://www.youtube.com/watch?v=j58V2vC9EPc\n    orcid: 0000-0001-7648-6578\ndescription: \"There is no reason for this.\"\ndate: \"2023-01-01\"\ncategories: [Linux, R, Docker]\nimage: \"containers.jpg\"\n---\n\n\n<!-- image credit: \n  Teng Yuhong\n  https://unsplash.com/photos/qMehmIyaXvY\n-->\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\n## Minimal example\n\nHere is the entire contents of the dockerfile:\n\n``` dockerfile\nFROM ghcr.io/djnavarro/arch-r:main\nCOPY script.R /home/script.R\nCMD Rscript /home/script.R\n```\n\nThis is the script:\n\n``` r\ncat(c(\"Running on:\", osVersion), sep = \"\\n  \")\ncat(c(\"With locale:\", strsplit(Sys.getlocale(), \";\")[[1]]), sep = \"\\n  \")\n```\n\nBuild it:\n\n``` bash\ncd system-check\ndocker build --tag my-system-check .\n```\n\n```\nSending build context to Docker daemon  3.072kB\nStep 1/3 : FROM ghcr.io/djnavarro/arch-r:main\n ---> 2f63d1340889\nStep 2/3 : COPY script.R /home/script.R\n ---> Using cache\n ---> d3661fb470f8\nStep 3/3 : CMD Rscript /home/script.R\n ---> Using cache\n ---> 315fd34395f4\nSuccessfully built 315fd34395f4\nSuccessfully tagged my-system-check:latest\n```\n\nNext tell docker to run it. Note that I'm referring to the image by name:\n\n``` bash\ndocker run my-system-check\n```\n\n```\nRunning on:\n  Arch Linux\nWith locale:\n  LC_CTYPE=en_US.UTF-8\n  LC_NUMERIC=C\n  LC_TIME=en_US.UTF-8\n  LC_COLLATE=en_US.UTF-8\n  LC_MONETARY=en_US.UTF-8\n  LC_MESSAGES=en_US.UTF-8\n  LC_PAPER=en_US.UTF-8\n  LC_NAME=C\n  LC_ADDRESS=C\n  LC_TELEPHONE=C\n  LC_MEASUREMENT=en_US.UTF-8\n  LC_IDENTIFICATION=C\n````\n\nCompare this to what happens if I run the script outside the docker image:\n\n``` bash\nRscript script.R\n```\n\n```\nRunning on:\n  Ubuntu 22.04.1 LTS\nWith locale:\n  LC_CTYPE=en_AU.UTF-8\n  LC_NUMERIC=C\n  LC_TIME=en_AU.UTF-8\n  LC_COLLATE=en_AU.UTF-8\n  LC_MONETARY=en_AU.UTF-8\n  LC_MESSAGES=en_AU.UTF-8\n  LC_PAPER=en_AU.UTF-8\n  LC_NAME=C\n  LC_ADDRESS=C\n  LC_TELEPHONE=C\n  LC_MEASUREMENT=en_AU.UTF-8\n  LC_IDENTIFICATION=C\n```\n\n\n\n## Fancier workflows\n\nEdit the github PAT to include the scopes we need. If you've created your PAT using the default scopes provided by `usethis::create_github_token()`, you'll need a few more to run workflows that build and modify docker images:\n\n- `read:packages` scope to download container images and read metadata.\n- `write:packages` scope to download and upload container images and read and write metadata.\n- `delete:packages` scope to delete container images.\n\nAdd the GitHub Actions workflow, commit whatever changes you want to the repo. When you push upstream to main, it will trigger an automatic deployment to the GitHub Container Registry. In fact, if you look at how I set up\n[github.com/djnavarro/arch-r](https://github.com/djnavarro/arch-r) you'll notice that's exactly how it works there. You can also take a look at the more sophisticated workflows used by the rocker project: [github.com/rocker-org/rocker](https://github.com/rocker-org/rocker). The workflow I set up for my little side project is very simple by comparison.\n\n## Resources\n\n- The docker reference documentation: [docs.docker.com/reference](https://docs.docker.com/reference/)\n\n- Instructions on giving docker sudo privileges for linux users: [docs.docker.com/engine/install/linux-postinstall](https://docs.docker.com/engine/install/linux-postinstall/)\n\n- The rocker project by Carl Boettiger, Dirk Eddelbuettel, Noam Ross, and Shima Tatsuya: [rocker-project.org](https://rocker-project.org/)\n\n- Source code for the rocker repositories: [github.com/rocker-org/rocker](https://github.com/rocker-org/rocker)\n\n- Blog post on docker by Colin Fay: [colinfay.me/docker-r-reproducibility](https://colinfay.me/docker-r-reproducibility/)\n\n- Slides on docker by Noam Ross: [github.com/noamross/nyhackr-docker-talk](https://github.com/noamross/nyhackr-docker-talk)\n\n- Docker for beginners by Prakhar Srivastav: [docker-curriculum.com](https://docker-curriculum.com/)\n\n- Working with GitHub Container Registry:\n[docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry)\n\n\n\n<!--------------- appendices go here ----------------->\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}