{
  "hash": "9e4f6f49236accdd2b80512e068f272f",
  "result": {
    "markdown": "---\ntitle: \"Fine-grained control of RNG seeds in R\"\ndescription: \"Like, why is 'seedcatcher' not already an R package?\"\ndate: \"2023-12-27\"\n--- \n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\nLiterally 19 lines of code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSeed <- R6::R6Class(\"Seed\",\n  public = list(\n    initialize = function(...) {\n      old <- .Random.seed\n      set.seed(...)\n      self$state <- eval(.Random.seed, envir = .GlobalEnv)\n      assign(\".Random.seed\", old, envir = .GlobalEnv)\n    },\n    state = NULL,\n    use = function(expr, envir = parent.frame()) {\n      old <- .Random.seed\n      assign(\".Random.seed\", self$state, envir = .GlobalEnv)\n      x <- eval(substitute(expr), envir = envir)\n      self$state <- eval(.Random.seed, envir = .GlobalEnv)\n      assign(\".Random.seed\", old, envir = .GlobalEnv)\n      return(x)\n    }\n  )\n)\n```\n:::\n\n\nLo and fucking behold bitch...\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1)\nold <- .Random.seed\nx <- Seed$new(1)\ny <- Seed$new(1)\nx$use(sample(10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  9  4  7  1  2  5  3 10  6  8\n```\n:::\n\n```{.r .cell-code}\ny$use(sample(10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  9  4  7  1  2  5  3 10  6  8\n```\n:::\n\n```{.r .cell-code}\nx$use(sample(10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  3  1  5  8  2  6 10  9  4  7\n```\n:::\n\n```{.r .cell-code}\ny$use(sample(10))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  3  1  5  8  2  6 10  9  4  7\n```\n:::\n\n```{.r .cell-code}\nall.equal(old, .Random.seed)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}