{
  "hash": "1fcd494e52b127d8188a055077d518ae",
  "result": {
    "markdown": "---\ntitle: \"Zero-copy data handover between R and Python, using Arrow and reticulate\"\ndescription: \"\"\ndate: \"2022-05-28\"\ncategories: [Apache Arrow, R, Python]\nimage: \"img/cover.jpg\"\nengine: knitr\n---\n\n\n<!-- \ncover img: https://unsplash.com/photos/k39RGHmLoV8\nartist: Claudio Schwarz\nlicence: unsplash free-to-use \n-->\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n<!-- \nthe default python environment is this one:\n/home/danielle/.local/share/r-miniconda/envs/r-reticulate/bin/python\n--->\n\n<!--\nconda_install(\"arrow_env\", \"pyarrow\")\n-->\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreticulate::use_virtualenv(\n  virtualenv = \"/home/danielle/.virtualenvs/arrow-env\", \n  required = TRUE\n)\n```\n:::\n\n\n<!--------------- post begins here ----------------->\n\nBLAH \n\n\n<!-- <blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">And with an arrow table (or dataset) that handoff can be zero copy, zero serialization. We need to improve our docs around this but thereâ€™s an example in the tests that shows it off: <a href=\"https://t.co/ff5Am0fsCW\">https://t.co/ff5Am0fsCW</a> (some) docs: <a href=\"https://t.co/hg9G2NenIM\">https://t.co/hg9G2NenIM</a></p>&mdash; Jonathan Keane (@jonkeane) <a href=\"https://twitter.com/jonkeane/status/1560016227824721920?ref_src=twsrc%5Etfw\">August 17, 2022</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>  -->\n\n## Check my pyarrow\n\n<!-- arrow::install_pyarrow() -->\n\n\n::: {.cell}\n\n```{.python .cell-code}\n# python\nimport sys\nprint(sys.version)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n3.8.10 (default, Jun 22 2022, 20:18:18) \n[GCC 9.4.0]\n```\n:::\n\n```{.python .cell-code}\nprint(sys.executable)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n/home/danielle/.virtualenvs/arrow-env/bin/python\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}