{
  "hash": "5dd80a011076c8bf65422453e6545c50",
  "result": {
    "markdown": "---\ntitle: \"Makefiles, or, the balrog and the submersible\"\ndescription: \"Fly, you fools!\"\ndate: \"2023-06-23\"\nimage: img/gothmog.jpg\nimage-alt: \"Stylised art showing a balrog. The piece is called 'Gothmog at the Storming of Gondolin', and is CC-BY licenced by Tom Loback\"\nfig-cap-location: margin\n--- \n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\nI have a secret to confess: I have been writing code for over 20 years, and until about a month ago I have been loathe even to try descending into the depths of   [Make](https://en.wikipedia.org/wiki/Make_(software)). For too long I have feared catastrophic implosion should I be reckless enough attempt to dive into these dark waters. Even now, as the sunlight fades and I pass below the surface into the treacherous realm of Almost Competence, I can hear the ominous sounds of compressive stress upon my psyche. I imagine betentacled krakenlike beasts of this realm outside the hull, the whispers of their hunting cry seeping into my tiny enclosed space as they call to the balrogs of open source...\n\n> Well *actually*...\n\n...they hiss at me.\n\nDrums, drums in the deep. I cannot get out. I shall have to complete this blog post in the hope that a wizard and his merry little troupe of clueless hobbits may one day discover the tale of my tragic descent.\n\n<br>\n\n![This piece is called 'Gothmog at the Storming of Gondolin', and is CC-BY licenced by Tom Loback](img/gothmog.jpg){fig-alt=\"Stylised art showing a balrog.\"}\n\n<br>\n\n## Departing the Sunlit Uplands\n\nEvery tragic narrative begins with a fatal mistake, the hubris of the doomed heroine making one terrible choice that seals her fate well before the story gets underway: in this case, deciding that now is the time to read a 1200 page book on C++. Absolutely cursed decision. There was no way I wasn't going to end up swallowed by a yawning hellmouth once that choice had been made. But as the saying goes, when descending into the abyss to be crushed by lovecraftian horrors, it's all about the journey and not the destination. \n\nHaving opened the pages of the necronomicon, I first felt my soul turning toward the darkness as I considered the consequences of C++ being a compiled language, and my obsessive need to write my own code and take notes as I read the book. Barely one chapter in and I had written almost 50 baby C\n++ programs, every one of them a helpless monster gnashing it's tiny teeth in ravenous hunger demanding to be compiled before it can do anything useful.\n\nOh no, my precious abominations, I told them. I already have human children to feed and care for, I'll not fall into the trap of lovingly passing each of you individually to the compiler for nurture and sustenance with bespoke hand crafted calls to clang++. That way lies madness and chaos. No, I shall hire a metaphorical nanny/butler/build-manager to feed you and compile you when you need compiling, to politely inform me each time a little C++ demon has grown into to a new binary file, and to take care of sundry other drudgeries with which I do not wish to be burdened.\n\nAnd with that my doomed submersible slipped below the waves. \n\n## The decay of that colossal Wreck\n\nAs the light fades away visions of my Ozymandian future cross my eyes. I imagine the Works that I will make, upon which even the Mighty will gaze and despair. Hints of the make targets that I will specify and the wonders that will get build. \n\nBehold! \n\nI have written a `Makefile` for my side project, an spell to feed my tiresome C++ babies into the maw of clang++, and render my markdown inscriptions into graven html with pandoc. \n\n\n::: {.cell .column-body-outset file='examples/learning-cpp-makefile'}\n\n```{.makefile .cell-code  code-line-numbers=\"true\"}\ncpp_src := $(wildcard src/*.cpp)\ncpp_out := $(patsubst src/%.cpp, bin/%, $(cpp_src))\n\npandoc_src := $(wildcard notes/*.md)\npandoc_out := $(patsubst notes/%.md, docs/%.html, $(pandoc_src))\n\nall: dirs $(cpp_out) $(pandoc_out) docs/style.css docs/.nojekyll docs/CNAME\n\ndirs:\n\t@mkdir -p ./bin\n\t@mkdir -p ./docs\n\nbin/%: src/%.cpp\n\t@echo \"[compiling]\" $<\n\t@clang++-15 --std=c++20 $< -o $@\n\ndocs/style.css: pandoc/style.css\n\t@echo \"[copying]  \" $<\n\t@cp pandoc/style.css docs/style.css\n\ndocs/.nojekyll:\n\t@echo \"[writing]  \" $@\n\t@touch docs/.nojekyll\n\ndocs/CNAME:\n\t@echo \"[writing]  \" $@\n\t@echo \"learning-cpp.djnavarro.net\" > docs/CNAME\n\ndocs/%.html: notes/%.md\n\t@echo \"[rendering]\" $<\n\t@pandoc $< -o $@ --template=./pandoc/template.html \\\n\t\t--standalone --mathjax --toc --toc-depth 2\n\nclean:\n\t@echo \"[deleting]  docs\"\n\t@echo \"[deleting]  bin\"\n\t@rm -rf docs\n\t@rm -rf bin\n\n```\n:::\n\n\nIt is not very impressive, I know. But it does work, and it does help. \n\n## Stop worrying and love the bomb\n\n\nEverything I know about Makefiles is from [makefiletutorial.com](https://makefiletutorial.com)\n\nLet's do this.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n./bin/species-first-pass\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\nacacia amoena\nhardenbergia violacea (happy wanderer)\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}