{
  "hash": "b058eed96ce5e05ee0eaa240703a7a91",
  "result": {
    "markdown": "---\ntitle: \"javascript-art\"\ndescription: \"This is a subtitle\"\ndate: \"2024-01-06\"\n--- \n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\n\n```{ojs}\n//| column: body-outset\n//| fig-align: center\n//| fig-cap: one art\npic1 = art(1)\n```\n\n```{ojs}\n//| column: body-outset\n//| fig-align: center\n//| fig-cap: another art\npic2 = art(2)\n```\n\n```{ojs}\nseedrandom = require('seedrandom@3.0.5')\n```\n\n```{ojs}\nfunction art(seed) {\n  // setup\n  const par = {height: 600, width: 900, nrow: 6, ncol: 9, iter: 500}\n  const rng = seedrandom(seed)\n  const ctx = DOM.context2d(par.width, par.height)  \n  const pal = pickOne(palettes, rng)\n  \n  // image\n  ctx.fillStyle = pickOne(pal, rng)\n  ctx.fillRect(0, 0, par.width, par.height)\n  let particles = makeParticles(par, pal, rng)\n  for (let i = 0; i < par.iter; i++) {\n    particles.map(p => {p.draw(ctx); p.move(rng)})\n  }\n  return ctx.canvas\n}\n```\n\n```{ojs}\nfunction makeParticles(par, pal, rng) {\n  const rowheight = par.height / par.nrow\n  const colwidth = par.width / par.ncol\n  const s = Math.min(rowheight, colwidth) * 2\n  let particles = []\n  let k = 0\n  for (let c = 0; c < (par.ncol - 1); c++) {\n    for (let r = 0; r < (par.nrow - 1); r++) {\n      particles[k] = {\n        id: k,\n        col: c,\n        row: r,\n        size: s,\n        width: 3,\n        x: colwidth * (c + 1),\n        y: rowheight * (r + 1),\n        xmax: par.width,\n        ymax: par.height,\n        xstep: colwidth / 5,\n        ystep: rowheight / 5,\n        arc1: Math.PI * 2 * rng.double(),\n        arc2: Math.PI * 2 * rng.double(),\n        shade: pickOne(pal, rng),\n        shrink: .01,\n        draw: function(ctx) {drawParticle(this, ctx)},\n        move: function(rng) {moveParticle(this, rng)}\n      }\n      k++\n    }\n  }\n  return particles\n}\n```\n\n```{ojs}\nfunction drawParticle(p, ctx) {\n  ctx.fillStyle = p.shade\n  ctx.strokeStyle = p.shade\n  ctx.lineWidth = p.width\n  ctx.beginPath()\n  ctx.arc(p.x, p.y, p.size, p.arc1, p.arc2)\n  ctx.fill()\n  ctx.stroke()\n  ctx.closePath()\n}\n```\n\n```{ojs}\nfunction moveParticle(p, rng) {\n  p.y = p.y + p.ystep * (rng.double() - .5)\n  p.x = p.x + p.xstep * (rng.double() - .5)\n  if (p.y > p.ymax) p.y = p.y - p.ymax\n  if (p.x > p.xmax) p.x = p.x - p.xmax\n  if (p.y < 0) p.y = p.ymax - p.y\n  if (p.x < 0) p.x = p.xmax - p.x\n  p.size = p.size * (1 - p.shrink)\n  p.arc1 = Math.PI * 2 * rng.double()\n  p.arc2 = Math.PI * 2 * rng.double()\n}\n```\n\n```{ojs}\nfunction pickOne(items, rng) {\n  return items[Math.floor(rng.double()*items.length)]\n}\n```\n\n```{ojs}\npalettes = [\n  [\"#de9151\", \"#f34213\", \"#2e2e3a\", \"#bc5d2e\", \"#bbb8b2\"],\n  [\"#a63446\", \"#fbfef9\", \"#0c6291\", \"#000004\", \"#7e1946\"],\n  [\"#ffffff\", \"#ffcad4\", \"#b0d0d3\", \"#c08497\", \"#f7af9d\"],\n  [\"#aa8f66\", \"#ed9b40\", \"#ffeedb\", \"#61c9a8\", \"#ba3b46\"],\n  [\"#241023\", \"#6b0504\", \"#a3320b\", \"#d5e68d\", \"#47a025\"],\n  [\"#64113f\", \"#de4d86\", \"#f29ca3\", \"#f7cacd\", \"#84e6f8\"],\n  [\"#660000\", \"#990033\", \"#5f021f\", \"#8c001a\", \"#ff9000\"],\n  [\"#c9cba3\", \"#ffe1a8\", \"#e26d5c\", \"#723d46\", \"#472d30\"],\n  [\"#0e7c7b\", \"#17bebb\", \"#d4f4dd\", \"#d62246\", \"#4b1d3f\"],\n  [\"#0a0908\", \"#49111c\", \"#f2f4f3\", \"#a9927d\", \"#5e503f\"],\n  [\"#020202\", \"#0d324d\", \"#7f5a83\", \"#a188a6\", \"#9da2ab\"],\n  [\"#c2c1c2\", \"#42213d\", \"#683257\", \"#bd4089\", \"#f51aa4\"],\n  [\"#820263\", \"#d90368\", \"#eadeda\", \"#2e294e\", \"#ffd400\"],\n  [\"#f4e409\", \"#eeba0b\", \"#c36f09\", \"#a63c06\", \"#710000\"],\n  [\"#d9d0de\", \"#bc8da0\", \"#a04668\", \"#ab4967\", \"#0c1713\"],\n  [\"#012622\", \"#003b36\", \"#ece5f0\", \"#e98a15\", \"#59114d\"],\n  [\"#3c1518\", \"#69140e\", \"#a44200\", \"#d58936\", \"#fffb46\"],\n  [\"#6e0d25\", \"#ffffb3\", \"#dcab6b\", \"#774e24\", \"#6a381f\"],\n  [\"#bcabae\", \"#0f0f0f\", \"#2d2e2e\", \"#716969\", \"#fbfbfb\"],\n  [\"#2b4162\", \"#385f71\", \"#f5f0f6\", \"#d7b377\", \"#8f754f\"]\n]\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}