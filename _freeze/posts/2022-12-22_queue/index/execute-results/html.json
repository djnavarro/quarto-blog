{
  "hash": "d61dc23ea0ca77fca9f387b03789cc4c",
  "result": {
    "markdown": "---\ntitle: \"First Time Callr\"\ndescription: \"Calling R from R.\"\ndate: \"2022-11-30\"\ncategories: [callr, R]\nimage: \"\"\n---\n\n\n<!--------------- my typical setup ----------------->\n\n\n\n\n\n\n<!--------------- post begins here ----------------->\n\nLook if you want to do this right, you go look at [futureverse.org](https://www.futureverse.org/). The [future](https://future.futureverse.org/) package provides a fabulous way to execute R code asynchronously and in parallel. There are many excellent packages built on top of that.^[Note to self: Learn [parallelly](https://www.jottr.org/2022/12/05/avoid-detectcores/)] Along similar lines, if you find yourself with a burning need to analyze terabytes of data with R then babe it might be time to start learning some R workflows using [Spark](https://therinspark.com/), [Arrow](https://blog.djnavarro.net/category/apachearrow), [Kubernetes](https://www.r-bloggers.com/2022/04/wtf-is-kubernetes-and-should-i-care-as-r-user/), and various other eldritch tokens of power that figured rather more prominently in my life than one might expect for a simple country girl.^[`kubectl auth can-i create occult-chaos`] \n\nThat's been said now. Good. We can put aside all pretension.\n\n- https://callr.r-lib.org/\n- https://processx.r-lib.org/\n\n<!--------------- appendices go here ----------------->\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}