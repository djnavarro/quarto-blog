{
  "hash": "29bfad900eacc0844e989c981f305a66",
  "result": {
    "markdown": "---\ntitle: \"Setting CRAN repository options\" \ndescription: |\n  A quick post on how to use RStudio public package manager instead of a \n  standard CRAN mirror, and an example of why that can be useful sometimes.\ndate: 2022-01-10\nimage: img/rasa-kasparaviciene-0TFxOkhFt14-unsplash.jpg\ncategories: [R]\ncitation:\n  url: https://blog.djnavarro.net/setting-cran-repositories \nparams:\n  slug: setting-cran-repositories\n  date: 2022-01-10\n---\n\n\n\n<!--------------- setup post ----------------->\n\n\n\n\n\n\n<!--------------- post ----------------->\n\nThe shiny new work laptop arrives. Pristine and beautiful in its factory-fresh state. I am in love. \n\nI remain in love right up the moment I remember that with new work laptop comes the peculiar torture of setting up the machine. My gorgeous little Dell XPS 13 shipped with Windows 11, and while I do quite like Windows these days, I've become very accustomed to working in linux, so my first task was to install Ubuntu 20.04. These days that's a pretty easy task, and the Ubuntu installer was even thoughtful enough to give me an option to enable full disk encryption. It all went smoothly. Yay me!\n\nEquipped with my fabulous new operating system, my next steps were to [install R](https://cran.r-project.org/bin/linux/ubuntu/) and [RStudio](https://www.rstudio.com/products/rstudio/download/), and for the first time in my life I was smart enough to remember to install the [latest version of git](https://itsfoss.com/install-git-ubuntu/) along with the [build-essential packages](https://itsfoss.com/build-essential-ubuntu/) that I'm pretty much guaranteed to need the moment I need to build anything from source. Yay me again! \n\nThen comes the horror. Installing R packages. On linux. A small part of me dies.\n\nI'm sure every linux-based R user shares my pain and needs no explanation, but some of the gentler souls who use Windows or Mac OS may not be aware of how tiresome package installation is on linux. The problem that linux users face is that CRAN does not maintain binaries for linux, so every time a linux user wants to install a package, it has to be built locally from the source code. This is both time consuming and frustrating, and very often you have to go hunting around to discover what other system dependencies need to be installed. So many tears have been shed over this. \n\nSo. \n\nMany. \n\nTears.\n\n## RStudio package manager\n\nRecently, however, I have become aware that a better world is possible thanks to the magic of [RStudio package manager](https://packagemanager.rstudio.com). I'd sort of known that this existed as an option, but it wasn't until today that I realised that --- in addition to the fancy commercial options --- RStudio maintains a *public* package manager as a free service: the [FAQ page is here](https://support.rstudio.com/hc/en-us/articles/360046703913-FAQ-for-RStudio-Public-Package-Manager). Anyone can configure R to install packages from the RStudio public package manager, if they want to. \n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/rasa-kasparaviciene-0TFxOkhFt14-unsplash.jpg){width=960}\n:::\n:::\n\n\nBut first a tiny bit of context... back in the distant part there was this strange, nightmarish time where I was teaching students R, but RStudio was not yet a *thing*. Many of the little niceties that RStudio users now take for granted didn't yet exist. In those dark years I had to spend a lot of time explaining to students that CRAN --- the [comprehensive R archive network](https://cran.r-project.org/) --- isn't actually a single website that contains lots of R packages. It's more like a whole network of [mirrors](https://cran.r-project.org/mirrors.html) distributed all over the world, and you'd have to \nmanually choose which one you wanted to install packages from. It was mildly annoying. It's considerably simpler now, because you can use the [cloud.r-project.org](https://cloud.r-project.org/) service that automatically directs you to an appropriate server. In fact, if you're using RStudio you've probably been using this service all along. \n\nRStudio package manager provides a modern alternative: it works  like a CRAN mirror, but it has a lot of additional functionality. It has broader coverage, for instance: it includes R packages on Bioconductor as well as packages on CRAN. For my purposes, however, the attractive property is that it hosts binaries suitable for Ubuntu and other flavours of linux. \n\n\"But how do I try it out, Danielle?\" I hear you ask. \n\nI'm so glad you asked, dear reader, because it's so much easier than it sounds.  \n\n\n## Method 1: RStudio settings\n\nIf you're using RStudio, the easiest way to switch to RStudio PPM is to change your settings inside RStudio. Go to the RStudio **Tools** menu and select **Global Options**. When the popup window appears, click on **Packages**. You'll see a screen that looks like this:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/options.png){width=882}\n:::\n:::\n\n<br>\n\nIf it says \"RStudio Global CDN\" next to \"Primary CRAN repo\", then you're using `cloud.r-project.org` as your CRAN repository. To switch to RStudio PPM, click on the \"change\" button. It will bring up a list of CRAN mirrors, and if you want you can choose one of those. However the RStudio PPM isn't technically a CRAN mirror, so it's not listed there. If you want to switch to using the RStudio PPM, you have to enter the URL manually. \n\nSo what URL do you want? Well, it depends on whether you want to install packages from binaries or from source, and on what operating system you're using. I'm on Ubuntu 20.04, \"Focal Fossa\", and the URL that serves binaries for my operating system is:\n\n```\nhttps://packagemanager.rstudio.com/all/__linux__/focal/latest\n```\n\nHere's me in the process of entering the URL:\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/options2.png){width=880}\n:::\n:::\n\n<br>\n\nOkay, but what if you're not on Ubuntu 20.04? If you're on a different version of Ubuntu or some other operating system, you can find the link you need from the [package manager setup page](https://packagemanager.rstudio.com/client/#/repos/1/overview). The relevant part of the page should look something like this:\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](img/setup.png){width=843}\n:::\n:::\n\n<br>\n\nTo get the URL you're looking for, click on the \"change\" link to choose your operating system, or toggle between the binary and source options.\n\n## Method 2: Edit your R profile\n\nThere are a couple of limitations to this method. The most obvious one is that it's no help if you don't use RStudio, and even for RStudio users it can be awkward if you don't always use RStudio. If that's your situation, you may want to manage your CRAN repository links by editing your R profile. To do this, open the .Rprofile file --- using `usethis::edit_r_profile()`, for example --- and add the following line:\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(repos = \"https://packagemanager.rstudio.com/all/__linux__/focal/latest\")\n```\n:::\n\n\nYou'll need to restart your R session for this change to take effect. \n\nIf you want to be fancy, you can list multiple URLs. If the package you want to install is not found at the first link, R will try the second link, and so on. That can be useful. For instance, this is what I use in my R profile: \n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(repos = c(\n  binary = \"https://packagemanager.rstudio.com/all/__linux__/focal/latest\",\n  source = \"https://packagemanager.rstudio.com/all/latest\",\n  CRAN = \"https://cloud.r-project.org\",\n  djnavarro = \"https://djnavarro.r-universe.dev\"\n))\n```\n:::\n\n\nUsing this configuration, R will look for a suitable binary version of the package on RStudio PPM. If that fails it will try to install from RStudio PPM by building the package from the source code. If that fails, it checks CRAN in the usual way. Finally, if that fails, it looks to see if the package I'm requesting is one of the packages I listed at [djnavarro.r-universe.dev](https://djnavarro.r-universe.dev), my very own tiny corner of the [R-universe](https://ropensci.org/r-universe/). Obviously, you're very unlikely to want to use my R-universe repository since it only consists of a handful of my own packages: but it's quite handy for me since they aren't all on CRAN!\n\n\n## Epilogue\n\nIf you're a Windows or Mac user, you might not be aware of how much of a game changer this is for linux users. For example, in my [previous blog post](https://blog.djnavarro.net/posts/2021-11-19_starting-apache-arrow-in-r/) I wrote about my experiences getting started using Apache Arrow. I'm a big fan of Arrow --- which should come as no surprise as I've recently started work at [Voltron Data](https://voltrondata.com/) --- but if you're installing the arrow R package on linux, it's extremely time consuming to build all the C++ libraries from source. It was a little cumbersome, but after switching to RStudio PPM, I can install arrow on my Ubuntu machine using the exact same command I'd use on Windows...\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"arrow\")\n```\n:::\n\n\n...and everything works. As easy on linux as it is on other operating systems! Yay! ðŸŽ‰\n\n\n\n\n<!--------------- appendices go here ----------------->\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}